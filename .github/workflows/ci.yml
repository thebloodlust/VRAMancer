# .github/workflows/ci.yml
name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python: ["3.10", "3.11", "3.12"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            setup.cfg
            pyproject.toml

      - name: Install (base + test extras)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .[test]
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"

      - name: Lint (flake8)
        run: |
          pip install flake8
          flake8 core/ dashboard/ examples/ tests/ || true

      - name: Run tests (test mode, rate-limit off)
        env:
          VRM_DISABLE_RATE_LIMIT: "1"
          VRM_TEST_MODE: "1"
        run: |
          pytest -q
  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install minimal
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run smoke subset
        env:
          VRM_DISABLE_RATE_LIMIT: "1"
          VRM_TEST_MODE: "1"
        run: |
          python -m tests.smoke

      multi-os:
        name: Tests multi-OS
        strategy:
          fail-fast: false
          matrix:
            os: [ubuntu-latest, windows-latest, macos-latest]
            python: ["3.11"]
        runs-on: ${{ matrix.os }}
        steps:
          - uses: actions/checkout@v4
          - uses: actions/setup-python@v5
            with:
              python-version: ${{ matrix.python }}
          - name: Install minimal
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
              pip install .[test]
          - name: Run fast tests
            env:
              VRM_DISABLE_RATE_LIMIT: "1"
              VRM_TEST_MODE: "1"
            run: pytest -q -k "not heavy"

      build-wheel:
        name: Build & Publish Wheel (dry-run)
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - uses: actions/setup-python@v5
            with:
              python-version: "3.12"
          - name: Build wheel
            run: |
              python -m pip install --upgrade pip build
              python -m build
              ls -1 dist
          - name: Upload artifact
            uses: actions/upload-artifact@v4
            with:
              name: wheels
              path: dist/*

      security-audit:
        name: Sécurité (pip-audit & bandit)
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - uses: actions/setup-python@v5
            with:
              python-version: "3.12"
          - name: Install audit tools
            run: |
              python -m pip install --upgrade pip
              pip install pip-audit bandit
          - name: pip-audit
            run: |
              pip-audit -r requirements.txt || true
          - name: bandit (baseline)
            run: |
              bandit -q -r core || true

      docker-build:
        name: Docker build (smoke)
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Build image
            run: |
              docker build -t vramancer:test .
          - name: Smoke run
            run: |
              docker run --rm vramancer:test python -c "print('container ok')"
